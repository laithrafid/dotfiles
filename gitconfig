# This is Git's per-user configuration file.
[user]
# Please adapt and uncomment the following lines:
	name = Laith
	email = laith@bayt.cloud
[url "ssh://git@github.com/"]
	insteadOf = https://github.com/
[color]
	ui = auto
[color "branch"]
	current = yellow bold
	local = green bold
	remote = cyan bold
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse
[color "status"]
	added = green bold
	changed = yellow bold
	untracked = red bold
[diff]
	tool = vimdiff
[difftool]
	prompt = false
[delta]
	features = line-numbers decorations
	line-numbers = true
[delta "decorations"]
	minus-style = red bold normal
	plus-style = green bold normal
	minus-emph-style = white bold red
	minus-non-emph-style = red bold normal
	plus-emph-style = white bold green
	plus-non-emph-style = green bold normal
	file-style = yellow bold none
	file-decoration-style = yellow box
	hunk-header-style = magenta bold
	hunk-header-decoration-style = magenta box
	minus-empty-line-marker-style = normal normal
	plus-empty-line-marker-style = normal normal
	line-numbers-right-format = "{np:^4}â”‚ "
[core]
	editor = vim
	autocrlf = input
        pager = less -FRSX
	excludesfile = /Users/laithrafid/.gitignore_global
[color "status"]
	added = green
	changed = yellow
	untracked = red
[push]
	default = current
[init]
	defaultBranch = main
[alias]
	ad = add --all
	adi = add --interactive
	adf = add --force
	###########################
	br = branch
	bra = branch --all
	brn = "!git branch $1 && git push origin -u $1; #"
	brd = "!git branch -d $1 && git push origin --delete $1; #"
	brD = "!git branch -D $1 && git push origin --delete $1; #" 
	brrn = "!git branch --move $1 $2 && git push origin :$1 $2 && git push -f origin -u $2; #"
	brpl = !/Users/$USER/dotfiles/gitpullallbranches
	brmg = branch --merged
	brnmg = branch --no-merged 
	###########################
	cl = clone
	###########################
	ck = checkout 
	ckb = checkout -b
	ckm = checkout main
	###########################
	cm = commit
	cmm = commit -m 
	cma = commit -a
	cmam = commit -a -m 
	cmd = commit --amend
	cmad = commit -a --amend
	###########################
	lg = log --oneline 
	lgr = log --oneline --graph --all --pretty=format:'%C(yellow)%h%C(auto)%d%Creset %s %C(white)- %an, %ar%Creset'
	lgl = log --graph --pretty=format:'%C(yellow)%h%C(auto)%d%Creset %s %C(white)- %an, %ar%Creset'
	lgrv = log --oneline --reverse --all --pretty=format:'%C(yellow)%h%C(auto)%d%Creset %s %C(white)- %an, %ar%Creset'
	###########################
	ps = push
	psf = push -f
	psu = push -u
	pst = push --tags
	pso = push origin 
	psou = push origin -u
	psul = push origin -u --all
	psom = push origin -u main
	###########################
	cp = cherry-pick
	cpa = cherry-pick --abort
	cpc = cherry-pick --continue
	###########################
	df = diff
	dfd = diff --cashed
	dft = difftool
	###########################
	mg = merge 
	mgd = "!git merge $1 && git branch -d $1; #"
	###########################
	fh = fetch
	###########################
	pl = pull
	pb = pull --rebase
	###########################
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbi = rebase --interactive
	rbs = rebase --skip
	###########################
	rt = reset
	rth = reset --hard
	rtm = reset --mixed
	rts = reset --soft
	rthh = reset --hard HEAD
	rtmh = reset --mixed HEAD
	rtsh = reset --soft HEAD
	rthom = reset --hard origin/main
	###########################
	st = status
	stb = status -sb
	stl = status --long -v
	###########################
	tg = tag
	tgd = tag -d
	###########################
	re = remote
	rea = remote add
	rer = remote rm
	rev = remote -v
	ren = remote rename
	rep = remote prune
	res = remote show
	reao = remote add origin
	reau = remote add upstream
	rero = remote remove origin
	reru = remote remove upstream
	reso = remote show origin
	resu = remote show upstream
	repo = remote prune origin
	repu = remote prune upstream
	###########################
	sh = stash
	sha = stash apply
	shc = stash clear
	shd = stash drop
	shl = stash list
	shp = stash pop
	shs = stash save
	shsk = stash save -k
	shw = stash show
	sht = !git stash list | wc -l 2>/dev/null | grep -oEi '[0-9][0-9]*'
	###########################
	sw = show
	swp = show -p
	swr = show -p --no-color
	###########################
	ch = switch
	chc = switch -c
	###########################
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[merge]
	tool = smerge
