# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# splitting panes commands
bind | split-window -h
bind _ split-window -v
unbind '"'
unbind %

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# enable mouse select copy/paste
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow, 
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"



# color needs to be set early in tmux 1.8 for some reason
set -g default-terminal "screen-256color"

# status tmux bar colors
set-option -g status-style bg=colour235,fg=colour136,default

# detach 
bind-key C-d detach-client

# cycle windows
bind-key C-n next-window
bind-key C-p previous-window

# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default,dim

# window title colors
set-window-option -g window-status-current-style fg=colour166,bg=default,dim

if-shell "[[ `tmux -V` == *1.[89]* ]]" 'set-window-option -g window-status-last-style fg=colour136,bg=default,dim'

if-shell "[[ `tmux -V` == *1.9* ]]" 'set-window-option -g window-status-alert-style fg=default,bg= default,reverse'

set-window-option -g window-status-bell-style fg=default,bg=colour52,default

set-window-option -g window-status-activity-style fg=default,bg=default,underscore

if-shell "[[ `tmux -V` == *1.9* ]]" 'set-window-option -g window-status-content-style fg=default,bg=default,underscore'


set-window-option -g window-status-format "#I:#W#F"
set-window-option -g window-status-current-format "#I:#W#F"

# pane border
set -g pane-border-style fg=default
set -g pane-active-border-style fg=blue,bg=default

# message text
set-option -g message-style bg=colour235,fg=colour166 

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour green #green
set-window-option -g clock-mode-style 24


# status bar
set -g status on
set -g status-keys emacs
set -g status-interval 10
set -g status-justify centre
set -g status-left-length 40
set -g status-left "#[fg=brightblack]|#[fg=green]#h#[fg=brightblack]|#[fg=brightblue]#(ip r g 8.8.8.8 | sed -rne 's/.*src //p' | xargs)#[fg=brightblack]|"
set -g status-right-length 30
set -g status-right "#[fg=brightblack]|#[fg=brightblue]#S #I:#P#[fg=brightblack]|#[fg=green]%b/%d#[fg=brightblack]|#[fg=green]%H:%M#[fg=brightblack]|"

# Start numbering at 1
set -g base-index 1
set -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

# HJKL pane swapping in that direction
# (NOTE: tmux doesn't support swap -L or -R)
#bind H swap-pane -L
bind J swap-pane -D
bind K swap-pane -U
#bind L swap-pane -R

# resize like in vim
# https://github.com/hatoishi/dotfiles/blob/master/tmux.conf
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10
# for sync-ing pane together 
bind s setw synchronize-panes on
bind S setw synchronize-panes off
# full-screen a pane (toggle)
#mux-panes     /
bind z resize-pane -Z

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# auto window rename
set-window-option -g automatic-rename

# ------------------------------------------------------------------------
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# ------------------------------------------------------------------------


set -g escape-time 20

# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind s; bind s split-window -v -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'

set-option -g history-limit 9000
setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock
